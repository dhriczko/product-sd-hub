## Ingress declaration to expose the network service.
ingresses:
  ## Public / Internet facing Ingress
  - enabled: true
    # -- The hostname to be used to precisely map incoming traffic onto the underlying network service
    hostname: "edc-cp-cons-pen.int.demo.catena-x.net"
    # -- Additional ingress annotations to add
    annotations:
      nginx.ingress.kubernetes.io/use-regex: "true"
    # -- EDC endpoints exposed by this ingress resource
    endpoints:
      - ids
      - default
      - data
      - control
    # -- Defines the [ingress class](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)  to use
    className: "nginx"
    # -- Enables TLS on the ingress resource
    tls: false
    ## Adds [cert-manager](https://cert-manager.io/docs/) annotations to the ingress resource
    certManager:
      # -- If preset enables certificate generation via cert-manager namespace scoped issuer
      issuer: ""
      # -- If preset enables certificate generation via cert-manager cluster-wide issuer
      clusterIssuer: ""

  ## Private / Intranet facing Ingress
  - enabled: false
    # -- The hostname to be used to precisely map incoming traffic onto the underlying network service
    hostname: "edc-controlplane.intranet"
    # -- Additional ingress annotations to add
    annotations: {}
    # -- EDC endpoints exposed by this ingress resource
    endpoints:
      - data
      - control
    # -- Defines the [ingress class](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)  to use
    className: ""
    # -- Enables TLS on the ingress resource
    tls: false
    ## Adds [cert-manager](https://cert-manager.io/docs/) annotations to the ingress resource
    certManager:
      # -- If preset enables certificate generation via cert-manager namespace scoped issuer
      issuer: ""
      # -- If preset enables certificate generation via cert-manager cluster-wide issuer
      clusterIssuer: ""


secret:
  dbSecretName: cons-db-secrets
  vaultSecretName: cons-vault-cp-secret

postgresql:
  enabled: true
  auth:
    username: "edcUser"
    database: "edcdb"
    existingSecret: cons-db-secrets
    secretKeys:
        adminPasswordKey: "postgres-password"
        userPasswordKey: "password"
        